---
import { Image } from "@astrojs/image/components";
import { parseDomain, ParseResultType } from "parse-domain";

export interface Props {
  title: string;
  url: string;
  description?: string;
}

const { url, title, description } = Astro.props;

const parseResult = parseDomain(new URL(url).hostname);

const srcDomain =
  parseResult.type === ParseResultType.Listed
    ? `${parseResult.domain}.${parseResult.topLevelDomains.join(".")}`
    : "petelambertmusic.com";

const size = 24;
const apiUrl = `https://www.google.com/s2/favicons?domain=${srcDomain}&sz=${size}`;
---

<li class="link-card">
  <a href={url} class="link">
    <Image
      src={apiUrl}
      aspectRatio={1 / 1}
      width={24}
      height={24}
      alt={srcDomain}
      format={"webp"}
      data-image-src={apiUrl}
    />
    <div class="content">
      <h3>
        <span class="title">{title}</span>
        <span class="arr">&rarr;</span>
      </h3>
      {description && <p>{description}</p>}
    </div>
  </a>
</li>

<style>
  .link-card {
    --transition: all 2s cubic-bezier(0.22, 1, 0.36, 1);
    display: flex;
    transition: var(--transition);
    animation: var(--growAnimation);
    transform: scale(1);
    transform-origin: 50% 50%;
    opacity: 1;
  }

  h3 {
    display: flex;
    font-size: 0.8rem;
    gap: 0.5rem;
    margin: 0;
    text-transform: uppercase;
    transition: var(--transition);
    width: 100%;
  }

  .content {
    display: flex;
    width: 100%;
  }
  .arr {
    transition: var(--transition);
    margin-left: auto;
  }
  p {
    color: var(--textColor);
    font-size: 0.8rem;
    margin-bottom: 0;
    margin-top: 0.5rem;
  }

  .link {
    display: flex;
    align-items: center;
    gap: 1rem;
    width: 100%;
  }
  a {
    border-bottom: 1px solid var(--borderColor);
    display: flex;
    line-height: 1.4;
    padding: 1rem 1.3rem;
    text-decoration: none;
    transition: var(--transition);
    width: 100%;
  }
  a:is(:hover, :focus, :focus-within) {
    background-color: var(--bgColor);
    background-image: var(--bgGradient);
    background-size: 100vh 100vw;
  }
  a:is(:hover, :focus, :focus-within) h3 {
    color: currentColor;
  }
  a:is(:hover, :focus, :focus-within) .arr {
    color: var(--linkColorHover);
    transform: scale(1.4);
  }
</style>
